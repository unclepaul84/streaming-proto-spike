// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PriceScenarios.proto

// Protobuf Java Version: 3.25.6
package proto;

public final class PriceScenariosOuterClass {
  private PriceScenariosOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PriceScenariosOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PriceScenarios)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string underlyer = 1;</code>
     * @return The underlyer.
     */
    java.lang.String getUnderlyer();
    /**
     * <code>string underlyer = 1;</code>
     * @return The bytes for underlyer.
     */
    com.google.protobuf.ByteString
        getUnderlyerBytes();

    /**
     * <code>string instrumentSymbol = 2;</code>
     * @return The instrumentSymbol.
     */
    java.lang.String getInstrumentSymbol();
    /**
     * <code>string instrumentSymbol = 2;</code>
     * @return The bytes for instrumentSymbol.
     */
    com.google.protobuf.ByteString
        getInstrumentSymbolBytes();

    /**
     * <code>repeated double price = 3;</code>
     * @return A list containing the price.
     */
    java.util.List<java.lang.Double> getPriceList();
    /**
     * <code>repeated double price = 3;</code>
     * @return The count of price.
     */
    int getPriceCount();
    /**
     * <code>repeated double price = 3;</code>
     * @param index The index of the element to return.
     * @return The price at the given index.
     */
    double getPrice(int index);
  }
  /**
   * Protobuf type {@code PriceScenarios}
   */
  public static final class PriceScenarios extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PriceScenarios)
      PriceScenariosOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PriceScenarios.newBuilder() to construct.
    private PriceScenarios(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PriceScenarios() {
      underlyer_ = "";
      instrumentSymbol_ = "";
      price_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PriceScenarios();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.PriceScenariosOuterClass.internal_static_PriceScenarios_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.PriceScenariosOuterClass.internal_static_PriceScenarios_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.PriceScenariosOuterClass.PriceScenarios.class, proto.PriceScenariosOuterClass.PriceScenarios.Builder.class);
    }

    public static final int UNDERLYER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object underlyer_ = "";
    /**
     * <code>string underlyer = 1;</code>
     * @return The underlyer.
     */
    @java.lang.Override
    public java.lang.String getUnderlyer() {
      java.lang.Object ref = underlyer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        underlyer_ = s;
        return s;
      }
    }
    /**
     * <code>string underlyer = 1;</code>
     * @return The bytes for underlyer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUnderlyerBytes() {
      java.lang.Object ref = underlyer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        underlyer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INSTRUMENTSYMBOL_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object instrumentSymbol_ = "";
    /**
     * <code>string instrumentSymbol = 2;</code>
     * @return The instrumentSymbol.
     */
    @java.lang.Override
    public java.lang.String getInstrumentSymbol() {
      java.lang.Object ref = instrumentSymbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instrumentSymbol_ = s;
        return s;
      }
    }
    /**
     * <code>string instrumentSymbol = 2;</code>
     * @return The bytes for instrumentSymbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInstrumentSymbolBytes() {
      java.lang.Object ref = instrumentSymbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instrumentSymbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRICE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList price_ =
        emptyDoubleList();
    /**
     * <code>repeated double price = 3;</code>
     * @return A list containing the price.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getPriceList() {
      return price_;
    }
    /**
     * <code>repeated double price = 3;</code>
     * @return The count of price.
     */
    public int getPriceCount() {
      return price_.size();
    }
    /**
     * <code>repeated double price = 3;</code>
     * @param index The index of the element to return.
     * @return The price at the given index.
     */
    public double getPrice(int index) {
      return price_.getDouble(index);
    }
    private int priceMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(underlyer_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, underlyer_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instrumentSymbol_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, instrumentSymbol_);
      }
      if (getPriceList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(priceMemoizedSerializedSize);
      }
      for (int i = 0; i < price_.size(); i++) {
        output.writeDoubleNoTag(price_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(underlyer_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, underlyer_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instrumentSymbol_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, instrumentSymbol_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPriceList().size();
        size += dataSize;
        if (!getPriceList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        priceMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.PriceScenariosOuterClass.PriceScenarios)) {
        return super.equals(obj);
      }
      proto.PriceScenariosOuterClass.PriceScenarios other = (proto.PriceScenariosOuterClass.PriceScenarios) obj;

      if (!getUnderlyer()
          .equals(other.getUnderlyer())) return false;
      if (!getInstrumentSymbol()
          .equals(other.getInstrumentSymbol())) return false;
      if (!getPriceList()
          .equals(other.getPriceList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UNDERLYER_FIELD_NUMBER;
      hash = (53 * hash) + getUnderlyer().hashCode();
      hash = (37 * hash) + INSTRUMENTSYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getInstrumentSymbol().hashCode();
      if (getPriceCount() > 0) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + getPriceList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.PriceScenariosOuterClass.PriceScenarios parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.PriceScenariosOuterClass.PriceScenarios parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.PriceScenariosOuterClass.PriceScenarios parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.PriceScenariosOuterClass.PriceScenarios prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PriceScenarios}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PriceScenarios)
        proto.PriceScenariosOuterClass.PriceScenariosOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.PriceScenariosOuterClass.internal_static_PriceScenarios_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.PriceScenariosOuterClass.internal_static_PriceScenarios_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.PriceScenariosOuterClass.PriceScenarios.class, proto.PriceScenariosOuterClass.PriceScenarios.Builder.class);
      }

      // Construct using proto.PriceScenariosOuterClass.PriceScenarios.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        underlyer_ = "";
        instrumentSymbol_ = "";
        price_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.PriceScenariosOuterClass.internal_static_PriceScenarios_descriptor;
      }

      @java.lang.Override
      public proto.PriceScenariosOuterClass.PriceScenarios getDefaultInstanceForType() {
        return proto.PriceScenariosOuterClass.PriceScenarios.getDefaultInstance();
      }

      @java.lang.Override
      public proto.PriceScenariosOuterClass.PriceScenarios build() {
        proto.PriceScenariosOuterClass.PriceScenarios result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.PriceScenariosOuterClass.PriceScenarios buildPartial() {
        proto.PriceScenariosOuterClass.PriceScenarios result = new proto.PriceScenariosOuterClass.PriceScenarios(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.PriceScenariosOuterClass.PriceScenarios result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.underlyer_ = underlyer_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.instrumentSymbol_ = instrumentSymbol_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          price_.makeImmutable();
          result.price_ = price_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.PriceScenariosOuterClass.PriceScenarios) {
          return mergeFrom((proto.PriceScenariosOuterClass.PriceScenarios)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.PriceScenariosOuterClass.PriceScenarios other) {
        if (other == proto.PriceScenariosOuterClass.PriceScenarios.getDefaultInstance()) return this;
        if (!other.getUnderlyer().isEmpty()) {
          underlyer_ = other.underlyer_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getInstrumentSymbol().isEmpty()) {
          instrumentSymbol_ = other.instrumentSymbol_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.price_.isEmpty()) {
          if (price_.isEmpty()) {
            price_ = other.price_;
            price_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensurePriceIsMutable();
            price_.addAll(other.price_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                underlyer_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                instrumentSymbol_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                double v = input.readDouble();
                ensurePriceIsMutable();
                price_.addDouble(v);
                break;
              } // case 25
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensurePriceIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  price_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object underlyer_ = "";
      /**
       * <code>string underlyer = 1;</code>
       * @return The underlyer.
       */
      public java.lang.String getUnderlyer() {
        java.lang.Object ref = underlyer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          underlyer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string underlyer = 1;</code>
       * @return The bytes for underlyer.
       */
      public com.google.protobuf.ByteString
          getUnderlyerBytes() {
        java.lang.Object ref = underlyer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          underlyer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string underlyer = 1;</code>
       * @param value The underlyer to set.
       * @return This builder for chaining.
       */
      public Builder setUnderlyer(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        underlyer_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string underlyer = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnderlyer() {
        underlyer_ = getDefaultInstance().getUnderlyer();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string underlyer = 1;</code>
       * @param value The bytes for underlyer to set.
       * @return This builder for chaining.
       */
      public Builder setUnderlyerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        underlyer_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object instrumentSymbol_ = "";
      /**
       * <code>string instrumentSymbol = 2;</code>
       * @return The instrumentSymbol.
       */
      public java.lang.String getInstrumentSymbol() {
        java.lang.Object ref = instrumentSymbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          instrumentSymbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string instrumentSymbol = 2;</code>
       * @return The bytes for instrumentSymbol.
       */
      public com.google.protobuf.ByteString
          getInstrumentSymbolBytes() {
        java.lang.Object ref = instrumentSymbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          instrumentSymbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string instrumentSymbol = 2;</code>
       * @param value The instrumentSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setInstrumentSymbol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        instrumentSymbol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string instrumentSymbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInstrumentSymbol() {
        instrumentSymbol_ = getDefaultInstance().getInstrumentSymbol();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string instrumentSymbol = 2;</code>
       * @param value The bytes for instrumentSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setInstrumentSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        instrumentSymbol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList price_ = emptyDoubleList();
      private void ensurePriceIsMutable() {
        if (!price_.isModifiable()) {
          price_ = makeMutableCopy(price_);
        }
        bitField0_ |= 0x00000004;
      }
      private void ensurePriceIsMutable(int capacity) {
        if (!price_.isModifiable()) {
          price_ = makeMutableCopy(price_, capacity);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated double price = 3;</code>
       * @return A list containing the price.
       */
      public java.util.List<java.lang.Double>
          getPriceList() {
        price_.makeImmutable();
        return price_;
      }
      /**
       * <code>repeated double price = 3;</code>
       * @return The count of price.
       */
      public int getPriceCount() {
        return price_.size();
      }
      /**
       * <code>repeated double price = 3;</code>
       * @param index The index of the element to return.
       * @return The price at the given index.
       */
      public double getPrice(int index) {
        return price_.getDouble(index);
      }
      /**
       * <code>repeated double price = 3;</code>
       * @param index The index to set the value at.
       * @param value The price to set.
       * @return This builder for chaining.
       */
      public Builder setPrice(
          int index, double value) {

        ensurePriceIsMutable();
        price_.setDouble(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double price = 3;</code>
       * @param value The price to add.
       * @return This builder for chaining.
       */
      public Builder addPrice(double value) {

        ensurePriceIsMutable();
        price_.addDouble(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double price = 3;</code>
       * @param values The price to add.
       * @return This builder for chaining.
       */
      public Builder addAllPrice(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePriceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, price_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double price = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrice() {
        price_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PriceScenarios)
    }

    // @@protoc_insertion_point(class_scope:PriceScenarios)
    private static final proto.PriceScenariosOuterClass.PriceScenarios DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.PriceScenariosOuterClass.PriceScenarios();
    }

    public static proto.PriceScenariosOuterClass.PriceScenarios getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PriceScenarios>
        PARSER = new com.google.protobuf.AbstractParser<PriceScenarios>() {
      @java.lang.Override
      public PriceScenarios parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PriceScenarios> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PriceScenarios> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.PriceScenariosOuterClass.PriceScenarios getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PriceScenarios_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PriceScenarios_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024PriceScenarios.proto\"L\n\016PriceScenarios" +
      "\022\021\n\tunderlyer\030\001 \001(\t\022\030\n\020instrumentSymbol\030" +
      "\002 \001(\t\022\r\n\005price\030\003 \003(\001B\007\n\005protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_PriceScenarios_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PriceScenarios_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PriceScenarios_descriptor,
        new java.lang.String[] { "Underlyer", "InstrumentSymbol", "Price", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
